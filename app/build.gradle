apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion = 29
    buildToolsVersion = "29.0.2"
    defaultConfig {
        applicationId "com.example.myperfectemptyproject"
        minSdkVersion(23)
        targetSdkVersion(29)
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        project.ext.set("archivesBaseName","i30mb1-" + defaultConfig.versionName)
   }
    buildTypes {
        release {
            minifyEnabled = false
//            shrinkResources true
            proguardFiles (getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation (fileTree(dir: "libs", include: ["*.jar"]))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.60")
    implementation("androidx.appcompat:appcompat:1.1.0")
    implementation("androidx.core:core-ktx:1.1.0")
    implementation("androidx.constraintlayout:constraintlayout:1.1.3")
    implementation("com.google.android.material:material:1.2.0-alpha01")

    // --- Coroutines ---
    def coroutines = "1.3.2"
    def coroutinesExt = "2.2.0-alpha01"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines")
    // для тестирования и ...
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines")
    // lifecycleScope + launchWhenResumed
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$coroutinesExt")
    // liveData ( LiveData + coroutines)
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$coroutinesExt")
    // viewModelScope
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$coroutinesExt")
    // Firebase
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines")

    // --- Dagger ---
    def dagger = "2.25.2"
    implementation("com.google.dagger:dagger:$dagger")
    kapt("com.google.dagger:dagger-compiler:$dagger")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")

    // --- Coil ---
    def coil = "0.8.0"
    implementation("io.coil-kt:coil:$coil")

    //  --- Navigation ---
    def navigation = "2.2.0-beta01"
    // Fragment.findNavController + Fragment.navArgs
    implementation("androidx.navigation:navigation-fragment-ktx:$navigation")
    // setupActionBarWithNavController + setupWithNavController
    implementation("androidx.navigation:navigation-ui-ktx:$navigation")
    // Activity.findNavController + Activity.navArgs + View.findNavController
    implementation("androidx.navigation:navigation-runtime-ktx:$navigation")
    implementation("androidx.lifecycle:lifecycle-common-java8:$navigation")
    // для легких транзакций + by viewModels()
    implementation("androidx.fragment:fragment-ktx:1.2.0-beta01")
    // on BackPress support for Fragment
    implementation("androidx.activity:activity-ktx:1.1.0-beta01")

    // --- Retrofit ---
    def retrofit = "2.6.2"
    implementation("com.squareup.retrofit2:retrofit:$retrofit")
    implementation("com.squareup.retrofit2:converter-moshi:$retrofit")
    // --- Moshi ---
    def moshi = "1.9.2"
    implementation("com.squareup.moshi:moshi:$moshi")
    // generate code in compile time instead of using runtime reflection
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshi")

    // --- Room ---
    def room = "2.2.2"
    implementation("androidx.room:room-runtime:$room")
    kapt("androidx.room:room-compiler:$room")
    // kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room")

    // --- SharedPreferences ---
    implementation("androidx.preference:preference-ktx:1.1.0")

    // --- RxJava2 ---
    implementation("io.reactivex.rxjava2:rxandroid:2.1.1")
    implementation("io.reactivex.rxjava2:rxjava:2.2.12")
}
